fun main(){
    /*val operations = Geometry2D()
    println("-----------------------Funciones2d-----------------------")
    print("Perimetro Triangulo Equilatero: ")
    println(operations.perimeterTriangleEquilateral(5.0))
    print("Perimetro Triangulo Escaleno: ")
    println(operations.perimeterTriangleScalane(5.0, 3.0, 7.0))
    println("------------------------------------------------------------------")
    print("Perimetro Cuadrado: ")
    println(operations.perimeterSquare(5.0))
    print("Area Cuadrado: ")
    println(operations.areaSquare(5.0))
    println("------------------------------------------------------------------")
    print("Perimetro Rectangulo: ")
    println(operations.perimeterRectangle(5.0, 5.0))
    print("Area Rectangulo: ")
    println(operations.areaRectangle(5.0, 5.0))
    print("Diagonal Rectangulo: ")
    println(operations.diagonalRectangle(9.0, 12.0))
    println("------------------------------------------------------------------")
    print("Perimetro Trapezoide: ")
    println(operations.perimeterTrapezoid(6.0, 7.0, 8.0))
    print("Area Trapezoide: ")
    println(operations.areaTrapezoid(6.0, 7.0, 8.0))
    println("------------------------------------------------------------------")
    print("Perimetro Rombo: ")
    println(operations.perimeterRhomb(3.0, 5.4))
    print("Area Rombo: ")
    println(operations.areaRhomb(3.0, 5.4))
    println("------------------------------------------------------------------")
    print("Perimetro Pentagono: ")
    println(operations.perimeterPentagon(5.0))
    print("Area Pentagono: ")
    println(operations.areaPentagon(5.0, 3.4))
    println("------------------------------------------------------------------")
    print("Perimetro Hexagono: ")
    println(operations.perimeterHexagon(3.46))
    print("Area Hexagono: ")
    println(operations.areaHexagon(3.46, 3.0))
    println("------------------------------------------------------------------")
    print("Circunferencia Circulo con diametro: ")
    println(operations.circunferenceCircle(0.0, 12.0))
    print("Circunferencia Circulo con radio: ")
    println(operations.circunferenceCircle(6.0, 0.0))
    print("Area Circulo: ")
    println(operations.areaCircle(6.0))
    print("Diametro Circulo: ")
    println(operations.diameterCircle(6.0))
    println("------------------------------------------------------------------")
    print("Area Arco Circular: ")
    println(operations.areaCircularArc(280.0, 20.0))
    print("Perimetro Arco Circular: ")
    println(operations.perimeterCircularArc(280.0, 20.0))
    println("------------------------------------------------------------------")
    print("Area Ovalo: ")
    println(operations.areaOval(20.0, 10.0))
    print("Perimetro Oval: ")
    println(operations.perimeterOval(20.0, 10.0))
    val bodys = Geometry3D()
    println("-----------------------Funciones3D-----------------------")
    print("Area total cubo: ")
    println(bodys.totalAreaCube(5.0))
    print("Area lateral del cubo: ")
    println(bodys.lateralAreaCube(5.0))
    print("Volumen cubo: ")
    println(bodys.volumeCube(5.0))
    println("------------------------------------------------------------------")
    print("Area total prisma: ")
    println(bodys.totalAreaPrism(5.0, 6.0, 7.0))
    print("Area lateral del prisma: ")
    println(bodys.lateralAreaPrism(5.0, 6.0, 7.0))
    print("Volumen prisma: ")
    println(bodys.volumePrism(5.0, 6.0, 7.0))
    println("------------------------------------------------------------------")
    print("Area total piramide: ")
    println(bodys.totalAreaPyramid(20.0, 30.0))
    print("Area lateral del piramide: ")
    println(bodys.lateralAreaPyramid(20.0, 30.0))
    print("Volumen piramide: ")
    println(bodys.volumePyramid(20.0, 30.0))
    println("------------------------------------------------------------------")
    print("Area total piramide corta: ")
    println(bodys.totalAreaShortPyramid(5.0, 6.0, 7.0))
    print("Area lateral del piramide corta: ")
    println(bodys.lateralAreaShortPyramid(5.0, 6.0, 7.0))
    print("Volumen piramide corta: ")
    println(bodys.volumeShortPyramid(5.0, 6.0, 7.0))
    println("------------------------------------------------------------------")
    print("Area total cono: ")
    println(bodys.totalAreaCone(20.0, 30.0))
    print("Area lateral del cono: ")
    println(bodys.lateralAreaCone(20.0, 30.0))
    print("Volumen cono: ")
    println(bodys.volumeCone(20.0, 30.0))
    println("------------------------------------------------------------------")
    print("Area total cono cortado: ")
    println(bodys.totalAreaConeCut(8.0, 16.0, 20.0))
    print("Area lateral del cono cortado: ")
    println(bodys.lateralAreaConeCut(8.0, 16.0, 20.0))
    print("Volumen cono cortado: ")
    println(bodys.volumeConeCut(8.0, 16.0, 20.0))
    println("------------------------------------------------------------------")
    print("Area total cilindro: ")
    println(bodys.totalAreaCylinder(12.0, 20.0))
    print("Area lateral del cilindro: ")
    println(bodys.lateralAreaCylinder(12.0, 20.0))
    print("Volumen cono cilindro: ")
    println(bodys.volumeCylinder(12.0, 20.0))
    println("------------------------------------------------------------------")
    print("Area total esfera: ")
    println(bodys.totalAreaSfere(12.0))
    print("Volumen cono esfera: ")
    println(bodys.volumeSfere(12.0))
    println("------------------------------------------------------------------")
    print("Area total tapa esfera: ")
    println(bodys.totalAreaSphereCap(12.0, 20.0))
    print("Area lateral tapa esfera: ")
    println(bodys.lateralAreaSphereCap(12.0, 20.0))
    print("Volumen tapa esfera: ")
    println(bodys.volumeSphereCap(12.0, 20.0))
    println("------------------------------------------------------------------")
    print("Volumen segmento esfera: ")
    println(bodys.volumeSphereSegment(5.0, 5.0, 5.0))
    println("------------------------------------------------------------------")
    print("Area total elipsoide: ")
    println(bodys.totalAreaEllipsoid(5.0, 5.0, 5.0))
    print("Volumen elipsioide: ")
    println(bodys.volumeEllipsoid(5.0, 5.0, 5.0))
    println("------------------------------------------------------------------")
    println("Angulo AB: ${operations.angleAB(5.0, 5.0, 5.0)}")
    val health = Health()
    println("------------------------------------------------------------------")
    println("-------------------------Funciones Health-------------------------")
    println("------------------------------------------------------------------")
    print("Calculo IMC with metric units: ")
    println(health.calculationIMC(1.70, 70.0))
    print("Calculo IMC with imperial units: ")
    println(health.calculationImperialIMC(56.0, 12.0))
    print("Evaluacion IMC with metric units: ")
    println(health.evaluatingIMC(health.calculationIMC(1.70, 110.0)))
    println("------------------------------------------------------------------")
    var BMR = health.bmrMen(90.0, 180.0, 25)
    println(health.bmrTotal(BMR, "no exercise"))
    println(health.bmrTotal(BMR, "1-3 DayS / WEEK"))
    println(health.bmrTotal(BMR, "3-5 DaYs / WeeK"))
    println(health.bmrTotal(BMR, "mOsT dAyS"))
    println(health.bmrTotal(BMR, "EveRy DaY"))
    var BMR2 = health.bmrWomen(90.0, 180.0, 20)
    println(health.bmrTotal(BMR2, "no exercise"))
    println(health.bmrTotal(BMR2, "1-3 DayS / WEEK"))
    println(health.bmrTotal(BMR2, "3-5 DaYs / WeeK"))
    println(health.bmrTotal(BMR2, "mOsT dAyS"))
    println(health.bmrTotal(BMR2, "EveRy DaY"))*/
    val algebra = Algebra()
    println("------------------------------------------------------------------")
    println("------------------------Funciones Algebra-------------------------")
    println("------------------------------------------------------------------")
    println("-----------------------------Percent------------------------------")
    println("Descuentos")
    println("x: " + algebra.discountTotal(50.0, 100.0))
    println("Descuento: " + algebra.discountPercent(50.0, 100.0))
    println("Incrementos")
    println("x: " + algebra.incrementTotal(100.0, 50.0))
    println("Increment0: " + algebra.percentIncrement(100.0, 50.0))
    println("Porcentaje Simple")
    println("x: " + algebra.simplePercent(50.0, 100.0))
    println("Aumentar / Disminuir")
    println("x: " + algebra.incrementAndDecrement(50.0, 200.0))
    println("Porcentaje de A desde B")
    println("x: " + algebra.percentOfAsinceB(50.0, 200.0))
    println("-----------------------------Average------------------------------")
    println("Aritmetica")
    println(algebra.arithmetic(52.0, 23.0))
    println("Geometrico")
    println(algebra.geometric(52.0, 23.0))
    println("Armonico")
    println(algebra.harmonic(52.0, 23.0))
    println("-----------------------------Proportion------------------------------")
    println("Directamente Proporcional")
    println(algebra.directlyProportional(5.0, 56.0, 7.0))
    println("Indirectamente Proporcional")
    println(algebra.indirectlyProportional(5.0, 56.0, 7.0))
    println("-----------------------------Ecuations------------------------------")
    println("Ecuacion Lineal")
    println(algebra.linealEquation(33.0, 125.0))
    println("Ecuacion Cuadratica")
    println("Posivive: " + algebra.quadraticEquationPositive(5.0, 3.0, 7.0))
    println("Negative: " + algebra.quadraticEquationNegative(5.0, 3.0, 7.0))
    println("-----------------------------MCD/MCM------------------------------")
    println("MCD: " + algebra.MCD(12369, 98765))
    println("MCM: " + algebra.MCM(12369, 98765))
    println(algebra.factorial(0))
    println("-----------------------------Combinations------------------------------")
    println("Combinaciones Ordenada Y Repetible: " + algebra.combinationWithOrganizedAndRepeated(4.0, 2))
    println("Combinaciones Repetible: " + algebra.combinationWithRepeated(4.0, 2))
    println("Combinaciones Organizada: " + algebra.combinationWithOrganized(4.0, 2))
    println("Combinaciones: " + algebra.combination(4.0, 2))
    println("-----------------------------Random------------------------------")
    println("Valor randon entre 10 y 11: " + algebra.random(10, 11, 5))
}